11/7: My AI Journey

Image generated by DALL-E

I am a 26 yr old with an Economics degree from a solid university that’s worked at a major CPG company since graduation, with experience across sales, tech, brewing and marketing. But I’ve always had a lust for the tech sector, the idea of building and fine-tuning products that impact people’s daily lives. However, I never committed to software engineering as a student. Instead, I decided to put myself near tech so I could soak in as many tangential experiences and skills as I could. I interned at a small startup, the university life sciences entrepreneur office and a Houston-based venture capital fund. While at university, I bought a promotional company that I parlayed into a tech platform that would allow the concept of happy hour deals to scale beyond local promotion. In this tech venture, Arch App, I was the de facto voice of the consumer, partnerships manager and product lead, while my co-founder managed the engineering team. We saw moderate success and even secured some funding through local pitch competitions but life got in the way and curtailed the long term potential of the business. When senior year recruitment season came around, I was dead set on joining an Associate Product Manager program because I felt my skills and experiences best fit the PM role. But my ‘lazy’ (non-technical) loophole approach towards tech proved unfruitful. Shocker.

Years passed but tech still felt like the ultimate landing place. Years passed again but I still hadn’t taken any practical step towards closing my knowledge gap. It took longer than it should have for me to realize that my lust for tech was just that, lust, not love. I hadn’t fallen in love with a problem or specific tool but was more allured by the industry’s sexiness. My AHA moment was March of this year, 2023, when I, for lack of a better term, fell in love with Large Language Models. Many early users of ChatGPT described moments of magic while using the application and this couldn’t ring more true. However, these moments of magic weren’t just astonishment in what the model could do, but the feeling that the world had opened up and would never be closed back shut. I most vividly saw a future where non-tech, small and mid-sized businesses could do what they love and provide better products/experiences because LLM applications would extend their accounting, marketing and operational support without any technical requirements from the business owners. So I put on my explorer hat and enthusiastically dove head first into all things LLMs.

I started from the end and worked back, trying first to understand the transformer architecture but realizing its subcomponents were too technical for me to grasp the full system. So I worked back to a Stanford Machine Learning course then to a Coursera Natural Language Processing course, while simultaneously reading model documentation and parsing through GitHub for the first time in my life, in hopes of standing up my own LLM application. Without exhaustive education, I cracked open VS Code and got to coding. I learn best by "moving fast and breaking things" so I used ChatGPT to speed up boiler plate code development. Most of my time is now spent on debugging and conceptualization. But I’m not alone because this is the future of software development, current engineers just have a little bit of a head start on me.

To date, I’ve managed to develop some non-production-ready applications that deploy a swath of LLM concepts like memory, RAG, prompt chaining, vector stores, embeddings, similarity search, Langchain etc. But I’ve, more or less unintentionally, also acquired some complimentary engineering skills/knowledge like Python and JSON proficiency, FastAPI, Flask, HTML, CSS, OAuth. Now feels like time to put my knowledge to the flame and work on these types of tools in a real-world environment. There seems to be a couple options, (1) build and sell production-ready software myself, (2) join a company that is doing Option 1 at scale, (3) consult companies how to implement these tools themselves or (4) lead an AI transformation at my current company. Options 1, 3 and 4 come with additional baggage that much of the knowledge work industry is hesitant or skeptical of the tech. Regardless of the path chosen, there’s still so much more to learn that can’t be done in a vacuum, so I will first and foremost lean on my peers and industry veterans like a sponge.

The allure of PM creeps back into my mind but for good reason this time. I still don’t have the technical acumen of many engineers out there but, in the right context, I have table stakes knowledge and experience to be the intermediate between the engineers and the consumer. But I’m not the only one candidate out there with eyes for PM and AI. These are the two buzziest positions in tech and thus the qualifications bar is high and imposter syndrome is real. But it’s now about working on this type of technology in any capacity I can, whether that is more about model linguistics, product customer support, ML engineering directly. Once I get my foot in the door, I can find a role that best suits me but in the outset I know I will get satisfaction from any role as long as my resolve for LLMs remains true.

My advice is to find something that lights you up, that you believe in, and work backwards. It’s easy for me to kick myself for not studying computer science and count myself out but its my passion for the technology that makes me malleable and reassured. My AI Journey has felt like running into brick walls on a daily basis, either from the activation or knowledge end of things; however, I stand resolute.